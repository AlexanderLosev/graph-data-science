description = 'Neo4j Graph Data Science :: Benchmark'

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'me.champeau.gradle.jmh'

repositories {
    maven {
        url = 'http://maven.ej-technologies.com/repository'
    }
}

dependencies {
    compile project(':proc')
    compile project(':alpha-proc')

    jmh group: 'org.neo4j',            name: 'neo4j',              version: ver.'neo4j'
    jmh group: 'org.neo4j',            name: 'neo4j-kernel',       version: ver.'neo4j'
    jmh group: 'org.neo4j',            name: 'neo4j-io',           version: ver.'neo4j'
    jmh group: 'org.neo4j',            name: 'procedure-compiler', version: ver.'neo4j'
    jmh group: 'com.jprofiler',        name: 'jprofiler-agent',    version: ver.'jprofiler-agent'
    jmh("org.openjdk.jmh:jmh-core:${ver.jmh}") {
        exclude group: 'org.apache.commons', module: 'commons-math3'
    }
    jmh group: 'org.openjdk.jmh',      name: 'jmh-core',         version: ver.'jmh'
    jmh group: 'org.apache.commons',   name: 'commons-math3',    version: ver.'commons-math3'
    jmh group: 'org.apache.commons',   name: 'commons-compress', version: ver.'commons-compress'

    jmh project(':test-utils')

    jmh group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: ver.'jmh'
}

shadowJar {
    dependsOn jmhJar
    archiveBaseName = 'benchmark'
    archiveClassifier = null
    version = null
    zip64 = true
    configurations = [project.configurations.jmh, project.configurations.jmhRuntime]
    from {
        jmhJar.outputs.files.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes 'Main-Class': 'org.openjdk.jmh.Main'
    }
    mergeServiceFiles()
    exclude 'META-INF/versions/**/*'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}

tasks.ci.dependsOn tasks.shadowJar
tasks.cipr.dependsOn tasks.shadowJar
