description = 'Neo4j Labs :: Graph Algorithms'

apply plugin: 'com.github.johnrengelman.shadow'

dependencies {
    compile project(':algo-common')

    compile group: 'com.carrotsearch',      name: 'hppc',           version: ver.'hppc'
    compile group: 'org.hdrhistogram',      name: 'HdrHistogram',   version: ver.'HdrHistogram'
    compile group: 'org.roaringbitmap',     name: 'RoaringBitmap',  version: ver.'RoaringBitmap'

    compileOnly group: 'org.neo4j',         name: 'neo4j',          version: ver.'neo4j'
    compileOnly group: 'org.neo4j',         name: 'neo4j-slf4j',    version: ver.'neo4j'

    testCompile project(':test-utils')
    testCompile group: 'net.jqwik',         name: 'jqwik',          version: ver.'jqwik'
}

test {
    useJUnitPlatform {
        includeEngines 'jqwik', 'junit-jupiter'
    }
    include '**/*Test.class'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from(javadoc.destinationDir)
}

tasks.withType(JavaCompile) {
    options.compilerArgs <<
        '-AIgnoreContextWarnings' <<
        '-AGeneratedDocumentationPath=target/generated-documentation' <<
        '-ADocumentation.FieldDelimiter=¦' <<
        '-ADocumentation.ExportedHeaders=qualified name¦description¦type' <<
        '-ADocumentation.QuotedFields=false' <<
        '-ADocumentation.DelimitedFirstField=true' <<
        '-ADocumentation.ExportGrouping=SINGLE'
}

shadowJar {
    baseName = "neo4j-labs-graph-algorithms"
    classifier = "standalone"
    minimize()
    exclude 'META-INF/versions/**/*'
    from licenseFile
    from generateLicensesFiles
}
